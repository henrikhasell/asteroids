/************************************************************************/
/* This subsystem can be used with any OpenGL 1.1 context. It is a text */
/* rendering system that renders 8x8 monospaced bitmap glyphs with an   */
/* UTF8 compatible character encoding.                                  */
/************************************************************************/
#ifndef GLYPH_H
#define GLYPH_H
/**********************************************************************/
/* These preprocessor defines should be used by the user to query the */
/* dimensions of an individual glyph as different implementations of  */
/* this subsystem may change glyph dimensions.                        */
/**********************************************************************/
#define GLYPH_WIDTH  8
#define GLYPH_HEIGHT 8
/***********************************************************************************/
/* The library used for OpenGL context creation is included here. This can include */
/* any library, as this subsystem does not utilise context specific functions.     */
/***********************************************************************************/
#ifdef __APPLE__
#   include "GLUT/glut.h"
#else
#   include "GL/glut.h"
#endif
/*******************************************************************/
/* Glyphs are rendered with OpenGL. An OpenGL library is required  */
/* to upload and render image data generated by InitialiseGlyph(). */
/*******************************************************************/
#if __APPLE__
#   include <OpenGL/gl.h>
#   include <OpenGL/glu.h>
#else
#   include <GL/gl.h>
#   include <GL/glu.h>
#endif

#ifdef _cplusplus
#   include <cstdarg>
#else
#   include <stdarg.h>
#endif

/****************************************************/
/* Glyphs are stored in memory as Image structures. */
/****************************************************/
#include "image.h"

/**********************************************/
/* Loads the resources used to render glyphs. */
/**********************************************/
void InitialiseGlyph();
/**********************************************/
/* Frees the resources used to render glyphs. */
/**********************************************/
void CleanupGlyph();
/************************************************************************************/
/* Draws a glyph with at the specified location with the specified dimensions (2D). */
/************************************************************************************/
void RenderGlyph(float x, float y, float w, float h, const char c);
/**********************************************************************************************/
/* Draws a string at the specified location, where each glyph is of the dimensions specified. */
/**********************************************************************************************/
void RenderString(float x, float y, float w, float h, const char *string, ...);

#endif /* GLYPH_H */
